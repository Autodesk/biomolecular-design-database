'use strict';

exports.__esModule = true;
exports['default'] = makeClient;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _inherits = require('inherits');

var _inherits2 = _interopRequireDefault(_inherits);

var _lodash = require('lodash');

// Ensure the client has fresh objects so we can tack onto
// the prototypes without mutating them globally.

function makeClient(ParentClient) {

  if (typeof ParentClient.prototype === 'undefined') {
    throw new Error('A valid parent client must be passed to makeClient');
  }

  function Client(config) {
    ParentClient.call(this, config);
  }
  _inherits2['default'](Client, ParentClient);

  function Formatter(client) {
    Formatter.super_.call(this, client);
  }
  _inherits2['default'](Formatter, ParentClient.prototype.Formatter);

  function QueryBuilder(client) {
    QueryBuilder.super_.call(this, client);
  }
  _inherits2['default'](QueryBuilder, ParentClient.prototype.QueryBuilder);

  function SchemaBuilder(client) {
    SchemaBuilder.super_.call(this, client);
  }
  _inherits2['default'](SchemaBuilder, ParentClient.prototype.SchemaBuilder);

  function SchemaCompiler(client, builder) {
    SchemaCompiler.super_.call(this, client, builder);
  }
  _inherits2['default'](SchemaCompiler, ParentClient.prototype.SchemaCompiler);

  function TableBuilder(client, method, tableName, fn) {
    TableBuilder.super_.call(this, client, method, tableName, fn);
  }
  _inherits2['default'](TableBuilder, ParentClient.prototype.TableBuilder);

  function TableCompiler(client, tableBuilder) {
    TableCompiler.super_.call(this, client, tableBuilder);
  }
  _inherits2['default'](TableCompiler, ParentClient.prototype.TableCompiler);

  function ColumnBuilder(client, tableBuilder, type, args) {
    ColumnBuilder.super_.call(this, client, tableBuilder, type, args);
  }
  _inherits2['default'](ColumnBuilder, ParentClient.prototype.ColumnBuilder);

  function ColumnCompiler(client, tableCompiler, columnBuilder) {
    ColumnCompiler.super_.call(this, client, tableCompiler, columnBuilder);
  }
  _inherits2['default'](ColumnCompiler, ParentClient.prototype.ColumnCompiler);

  _lodash.assign(Client.prototype, {
    Formatter: Formatter,
    QueryBuilder: QueryBuilder,
    SchemaBuilder: SchemaBuilder,
    SchemaCompiler: SchemaCompiler,
    TableBuilder: TableBuilder,
    TableCompiler: TableCompiler,
    ColumnBuilder: ColumnBuilder,
    ColumnCompiler: ColumnCompiler
  });

  return Client;
}

module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL21ha2UtY2xpZW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztxQkFPd0IsVUFBVTs7Ozt3QkFOYixVQUFVOzs7O3NCQUVSLFFBQVE7Ozs7O0FBSWhCLFNBQVMsVUFBVSxDQUFDLFlBQVksRUFBRTs7QUFFL0MsTUFBSSxPQUFPLFlBQVksQ0FBQyxTQUFTLEtBQUssV0FBVyxFQUFFO0FBQ2pELFVBQU0sSUFBSSxLQUFLLENBQUMsb0RBQW9ELENBQUMsQ0FBQTtHQUN0RTs7QUFFRCxXQUFTLE1BQU0sQ0FBQyxNQUFNLEVBQUU7QUFDdEIsZ0JBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFBO0dBQ2hDO0FBQ0Qsd0JBQVMsTUFBTSxFQUFFLFlBQVksQ0FBQyxDQUFBOztBQUU5QixXQUFTLFNBQVMsQ0FBQyxNQUFNLEVBQUU7QUFDekIsYUFBUyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFBO0dBQ3BDO0FBQ0Qsd0JBQVMsU0FBUyxFQUFFLFlBQVksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUE7O0FBRXJELFdBQVMsWUFBWSxDQUFDLE1BQU0sRUFBRTtBQUM1QixnQkFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFBO0dBQ3ZDO0FBQ0Qsd0JBQVMsWUFBWSxFQUFFLFlBQVksQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLENBQUE7O0FBRTNELFdBQVMsYUFBYSxDQUFDLE1BQU0sRUFBRTtBQUM3QixpQkFBYSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFBO0dBQ3hDO0FBQ0Qsd0JBQVMsYUFBYSxFQUFFLFlBQVksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLENBQUE7O0FBRTdELFdBQVMsY0FBYyxDQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUU7QUFDdkMsa0JBQWMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUE7R0FDbEQ7QUFDRCx3QkFBUyxjQUFjLEVBQUUsWUFBWSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsQ0FBQTs7QUFFL0QsV0FBUyxZQUFZLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFO0FBQ25ELGdCQUFZLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUE7R0FDOUQ7QUFDRCx3QkFBUyxZQUFZLEVBQUUsWUFBWSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQTs7QUFFM0QsV0FBUyxhQUFhLENBQUMsTUFBTSxFQUFFLFlBQVksRUFBRTtBQUMzQyxpQkFBYSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQTtHQUN0RDtBQUNELHdCQUFTLGFBQWEsRUFBRSxZQUFZLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFBOztBQUU3RCxXQUFTLGFBQWEsQ0FBQyxNQUFNLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7QUFDdkQsaUJBQWEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQTtHQUNsRTtBQUNELHdCQUFTLGFBQWEsRUFBRSxZQUFZLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFBOztBQUU3RCxXQUFTLGNBQWMsQ0FBQyxNQUFNLEVBQUUsYUFBYSxFQUFFLGFBQWEsRUFBRTtBQUM1RCxrQkFBYyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxhQUFhLEVBQUUsYUFBYSxDQUFDLENBQUE7R0FDdkU7QUFDRCx3QkFBUyxjQUFjLEVBQUUsWUFBWSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsQ0FBQTs7QUFFL0QsaUJBQU8sTUFBTSxDQUFDLFNBQVMsRUFBRTtBQUN2QixhQUFTLEVBQVQsU0FBUztBQUNULGdCQUFZLEVBQVosWUFBWTtBQUNaLGlCQUFhLEVBQWIsYUFBYTtBQUNiLGtCQUFjLEVBQWQsY0FBYztBQUNkLGdCQUFZLEVBQVosWUFBWTtBQUNaLGlCQUFhLEVBQWIsYUFBYTtBQUNiLGlCQUFhLEVBQWIsYUFBYTtBQUNiLGtCQUFjLEVBQWQsY0FBYztHQUNmLENBQUMsQ0FBQTs7QUFFRixTQUFPLE1BQU0sQ0FBQTtDQUNkIiwiZmlsZSI6Im1ha2UtY2xpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgaW5oZXJpdHMgZnJvbSAnaW5oZXJpdHMnO1xuXG5pbXBvcnQgeyBhc3NpZ24gfSBmcm9tICdsb2Rhc2gnXG5cbi8vIEVuc3VyZSB0aGUgY2xpZW50IGhhcyBmcmVzaCBvYmplY3RzIHNvIHdlIGNhbiB0YWNrIG9udG9cbi8vIHRoZSBwcm90b3R5cGVzIHdpdGhvdXQgbXV0YXRpbmcgdGhlbSBnbG9iYWxseS5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1ha2VDbGllbnQoUGFyZW50Q2xpZW50KSB7XG5cbiAgaWYgKHR5cGVvZiBQYXJlbnRDbGllbnQucHJvdG90eXBlID09PSAndW5kZWZpbmVkJykge1xuICAgIHRocm93IG5ldyBFcnJvcignQSB2YWxpZCBwYXJlbnQgY2xpZW50IG11c3QgYmUgcGFzc2VkIHRvIG1ha2VDbGllbnQnKVxuICB9XG5cbiAgZnVuY3Rpb24gQ2xpZW50KGNvbmZpZykge1xuICAgIFBhcmVudENsaWVudC5jYWxsKHRoaXMsIGNvbmZpZylcbiAgfVxuICBpbmhlcml0cyhDbGllbnQsIFBhcmVudENsaWVudClcblxuICBmdW5jdGlvbiBGb3JtYXR0ZXIoY2xpZW50KSB7XG4gICAgRm9ybWF0dGVyLnN1cGVyXy5jYWxsKHRoaXMsIGNsaWVudClcbiAgfVxuICBpbmhlcml0cyhGb3JtYXR0ZXIsIFBhcmVudENsaWVudC5wcm90b3R5cGUuRm9ybWF0dGVyKVxuXG4gIGZ1bmN0aW9uIFF1ZXJ5QnVpbGRlcihjbGllbnQpIHtcbiAgICBRdWVyeUJ1aWxkZXIuc3VwZXJfLmNhbGwodGhpcywgY2xpZW50KVxuICB9XG4gIGluaGVyaXRzKFF1ZXJ5QnVpbGRlciwgUGFyZW50Q2xpZW50LnByb3RvdHlwZS5RdWVyeUJ1aWxkZXIpXG5cbiAgZnVuY3Rpb24gU2NoZW1hQnVpbGRlcihjbGllbnQpIHtcbiAgICBTY2hlbWFCdWlsZGVyLnN1cGVyXy5jYWxsKHRoaXMsIGNsaWVudClcbiAgfVxuICBpbmhlcml0cyhTY2hlbWFCdWlsZGVyLCBQYXJlbnRDbGllbnQucHJvdG90eXBlLlNjaGVtYUJ1aWxkZXIpXG5cbiAgZnVuY3Rpb24gU2NoZW1hQ29tcGlsZXIoY2xpZW50LCBidWlsZGVyKSB7XG4gICAgU2NoZW1hQ29tcGlsZXIuc3VwZXJfLmNhbGwodGhpcywgY2xpZW50LCBidWlsZGVyKVxuICB9XG4gIGluaGVyaXRzKFNjaGVtYUNvbXBpbGVyLCBQYXJlbnRDbGllbnQucHJvdG90eXBlLlNjaGVtYUNvbXBpbGVyKVxuXG4gIGZ1bmN0aW9uIFRhYmxlQnVpbGRlcihjbGllbnQsIG1ldGhvZCwgdGFibGVOYW1lLCBmbikge1xuICAgIFRhYmxlQnVpbGRlci5zdXBlcl8uY2FsbCh0aGlzLCBjbGllbnQsIG1ldGhvZCwgdGFibGVOYW1lLCBmbilcbiAgfVxuICBpbmhlcml0cyhUYWJsZUJ1aWxkZXIsIFBhcmVudENsaWVudC5wcm90b3R5cGUuVGFibGVCdWlsZGVyKVxuXG4gIGZ1bmN0aW9uIFRhYmxlQ29tcGlsZXIoY2xpZW50LCB0YWJsZUJ1aWxkZXIpIHtcbiAgICBUYWJsZUNvbXBpbGVyLnN1cGVyXy5jYWxsKHRoaXMsIGNsaWVudCwgdGFibGVCdWlsZGVyKVxuICB9XG4gIGluaGVyaXRzKFRhYmxlQ29tcGlsZXIsIFBhcmVudENsaWVudC5wcm90b3R5cGUuVGFibGVDb21waWxlcilcblxuICBmdW5jdGlvbiBDb2x1bW5CdWlsZGVyKGNsaWVudCwgdGFibGVCdWlsZGVyLCB0eXBlLCBhcmdzKSB7XG4gICAgQ29sdW1uQnVpbGRlci5zdXBlcl8uY2FsbCh0aGlzLCBjbGllbnQsIHRhYmxlQnVpbGRlciwgdHlwZSwgYXJncylcbiAgfVxuICBpbmhlcml0cyhDb2x1bW5CdWlsZGVyLCBQYXJlbnRDbGllbnQucHJvdG90eXBlLkNvbHVtbkJ1aWxkZXIpXG5cbiAgZnVuY3Rpb24gQ29sdW1uQ29tcGlsZXIoY2xpZW50LCB0YWJsZUNvbXBpbGVyLCBjb2x1bW5CdWlsZGVyKSB7XG4gICAgQ29sdW1uQ29tcGlsZXIuc3VwZXJfLmNhbGwodGhpcywgY2xpZW50LCB0YWJsZUNvbXBpbGVyLCBjb2x1bW5CdWlsZGVyKVxuICB9XG4gIGluaGVyaXRzKENvbHVtbkNvbXBpbGVyLCBQYXJlbnRDbGllbnQucHJvdG90eXBlLkNvbHVtbkNvbXBpbGVyKVxuXG4gIGFzc2lnbihDbGllbnQucHJvdG90eXBlLCB7XG4gICAgRm9ybWF0dGVyLFxuICAgIFF1ZXJ5QnVpbGRlcixcbiAgICBTY2hlbWFCdWlsZGVyLFxuICAgIFNjaGVtYUNvbXBpbGVyLFxuICAgIFRhYmxlQnVpbGRlcixcbiAgICBUYWJsZUNvbXBpbGVyLFxuICAgIENvbHVtbkJ1aWxkZXIsXG4gICAgQ29sdW1uQ29tcGlsZXJcbiAgfSlcblxuICByZXR1cm4gQ2xpZW50XG59XG4iXX0=