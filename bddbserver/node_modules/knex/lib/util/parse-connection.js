'use strict';

exports.__esModule = true;
exports['default'] = parseConnectionString;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _url = require('url');

var _url2 = _interopRequireDefault(_url);

var _pgConnectionString = require('pg-connection-string');

function parseConnectionString(str) {
  var parsed = _url2['default'].parse(str);
  var protocol = parsed.protocol;

  if (protocol && protocol.indexOf('maria') === 0) {
    protocol = 'maria';
  }
  if (protocol === null) {
    return {
      client: 'sqlite3',
      connection: {
        filename: str
      }
    };
  }
  if (protocol.slice(-1) === ':') {
    protocol = protocol.slice(0, -1);
  }
  return {
    client: protocol,
    connection: protocol === 'postgres' ? _pgConnectionString.parse(str) : connectionObject(parsed)
  };
}

function connectionObject(parsed) {
  var connection = {};
  var db = parsed.pathname;
  if (db[0] === '/') {
    db = db.slice(1);
  }
  if (parsed.protocol.indexOf('maria') === 0) {
    connection.db = db;
  } else {
    connection.database = db;
  }
  if (parsed.hostname) {
    if (parsed.protocol.indexOf('mssql') === 0) {
      connection.server = parsed.hostname;
    } else {
      connection.host = parsed.hostname;
    }
  }
  if (parsed.port) {
    connection.port = parsed.port;
  }
  if (parsed.auth) {
    var idx = parsed.auth.indexOf(':');
    if (idx !== -1) {
      connection.user = parsed.auth.slice(0, idx);
      if (idx < parsed.auth.length - 1) {
        connection.password = parsed.auth.slice(idx + 1);
      }
    } else {
      connection.user = parsed.auth;
    }
  }
  return connection;
}
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL3BhcnNlLWNvbm5lY3Rpb24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O3FCQUl3QixxQkFBcUI7Ozs7bUJBSDdCLEtBQUs7Ozs7a0NBQ1ksc0JBQXNCOztBQUV4QyxTQUFTLHFCQUFxQixDQUFDLEdBQUcsRUFBRTtBQUNqRCxNQUFNLE1BQU0sR0FBRyxpQkFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUE7TUFDdkIsUUFBUSxHQUFLLE1BQU0sQ0FBbkIsUUFBUTs7QUFDZCxNQUFJLFFBQVEsSUFBSSxRQUFRLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtBQUMvQyxZQUFRLEdBQUcsT0FBTyxDQUFBO0dBQ25CO0FBQ0QsTUFBSSxRQUFRLEtBQUssSUFBSSxFQUFFO0FBQ3JCLFdBQU87QUFDTCxZQUFNLEVBQUUsU0FBUztBQUNqQixnQkFBVSxFQUFFO0FBQ1YsZ0JBQVEsRUFBRSxHQUFHO09BQ2Q7S0FDRixDQUFBO0dBQ0Y7QUFDRCxNQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLEVBQUU7QUFDOUIsWUFBUSxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7R0FDbEM7QUFDRCxTQUFPO0FBQ0wsVUFBTSxFQUFFLFFBQVE7QUFDaEIsY0FBVSxFQUFFLFFBQVEsS0FBSyxVQUFVLEdBQUcsMEJBQVEsR0FBRyxDQUFDLEdBQUcsZ0JBQWdCLENBQUMsTUFBTSxDQUFDO0dBQzlFLENBQUE7Q0FDRjs7QUFFRCxTQUFTLGdCQUFnQixDQUFDLE1BQU0sRUFBRTtBQUNoQyxNQUFNLFVBQVUsR0FBRyxFQUFFLENBQUM7QUFDdEIsTUFBSSxFQUFFLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQztBQUN6QixNQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLEVBQUU7QUFDakIsTUFBRSxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUE7R0FDakI7QUFDRCxNQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtBQUMxQyxjQUFVLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQTtHQUNuQixNQUFNO0FBQ0wsY0FBVSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUE7R0FDekI7QUFDRCxNQUFJLE1BQU0sQ0FBQyxRQUFRLEVBQUU7QUFDbkIsUUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7QUFDMUMsZ0JBQVUsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQztLQUNyQyxNQUFNO0FBQ0wsZ0JBQVUsQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQztLQUNuQztHQUNGO0FBQ0QsTUFBSSxNQUFNLENBQUMsSUFBSSxFQUFFO0FBQ2YsY0FBVSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDO0dBQy9CO0FBQ0QsTUFBSSxNQUFNLENBQUMsSUFBSSxFQUFFO0FBQ2YsUUFBTSxHQUFHLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDckMsUUFBSSxHQUFHLEtBQUssQ0FBQyxDQUFDLEVBQUU7QUFDZCxnQkFBVSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDNUMsVUFBSSxHQUFHLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO0FBQ2hDLGtCQUFVLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQztPQUNsRDtLQUNGLE1BQU07QUFDTCxnQkFBVSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDO0tBQy9CO0dBQ0Y7QUFDRCxTQUFPLFVBQVUsQ0FBQTtDQUNsQiIsImZpbGUiOiJwYXJzZS1jb25uZWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgdXJsIGZyb20gJ3VybCdcbmltcG9ydCB7IHBhcnNlIGFzIHBhcnNlUEcgfSBmcm9tICdwZy1jb25uZWN0aW9uLXN0cmluZydcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGFyc2VDb25uZWN0aW9uU3RyaW5nKHN0cikge1xuICBjb25zdCBwYXJzZWQgPSB1cmwucGFyc2Uoc3RyKVxuICBsZXQgeyBwcm90b2NvbCB9ID0gcGFyc2VkXG4gIGlmIChwcm90b2NvbCAmJiBwcm90b2NvbC5pbmRleE9mKCdtYXJpYScpID09PSAwKSB7XG4gICAgcHJvdG9jb2wgPSAnbWFyaWEnXG4gIH1cbiAgaWYgKHByb3RvY29sID09PSBudWxsKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNsaWVudDogJ3NxbGl0ZTMnLFxuICAgICAgY29ubmVjdGlvbjoge1xuICAgICAgICBmaWxlbmFtZTogc3RyXG4gICAgICB9XG4gICAgfVxuICB9XG4gIGlmIChwcm90b2NvbC5zbGljZSgtMSkgPT09ICc6Jykge1xuICAgIHByb3RvY29sID0gcHJvdG9jb2wuc2xpY2UoMCwgLTEpO1xuICB9XG4gIHJldHVybiB7XG4gICAgY2xpZW50OiBwcm90b2NvbCxcbiAgICBjb25uZWN0aW9uOiBwcm90b2NvbCA9PT0gJ3Bvc3RncmVzJyA/IHBhcnNlUEcoc3RyKSA6IGNvbm5lY3Rpb25PYmplY3QocGFyc2VkKVxuICB9XG59XG5cbmZ1bmN0aW9uIGNvbm5lY3Rpb25PYmplY3QocGFyc2VkKSB7XG4gIGNvbnN0IGNvbm5lY3Rpb24gPSB7fTtcbiAgbGV0IGRiID0gcGFyc2VkLnBhdGhuYW1lO1xuICBpZiAoZGJbMF0gPT09ICcvJykge1xuICAgIGRiID0gZGIuc2xpY2UoMSlcbiAgfVxuICBpZiAocGFyc2VkLnByb3RvY29sLmluZGV4T2YoJ21hcmlhJykgPT09IDApIHtcbiAgICBjb25uZWN0aW9uLmRiID0gZGJcbiAgfSBlbHNlIHtcbiAgICBjb25uZWN0aW9uLmRhdGFiYXNlID0gZGJcbiAgfVxuICBpZiAocGFyc2VkLmhvc3RuYW1lKSB7XG4gICAgaWYgKHBhcnNlZC5wcm90b2NvbC5pbmRleE9mKCdtc3NxbCcpID09PSAwKSB7XG4gICAgICBjb25uZWN0aW9uLnNlcnZlciA9IHBhcnNlZC5ob3N0bmFtZTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29ubmVjdGlvbi5ob3N0ID0gcGFyc2VkLmhvc3RuYW1lO1xuICAgIH1cbiAgfVxuICBpZiAocGFyc2VkLnBvcnQpIHtcbiAgICBjb25uZWN0aW9uLnBvcnQgPSBwYXJzZWQucG9ydDtcbiAgfVxuICBpZiAocGFyc2VkLmF1dGgpIHtcbiAgICBjb25zdCBpZHggPSBwYXJzZWQuYXV0aC5pbmRleE9mKCc6Jyk7XG4gICAgaWYgKGlkeCAhPT0gLTEpIHtcbiAgICAgIGNvbm5lY3Rpb24udXNlciA9IHBhcnNlZC5hdXRoLnNsaWNlKDAsIGlkeCk7XG4gICAgICBpZiAoaWR4IDwgcGFyc2VkLmF1dGgubGVuZ3RoIC0gMSkge1xuICAgICAgICBjb25uZWN0aW9uLnBhc3N3b3JkID0gcGFyc2VkLmF1dGguc2xpY2UoaWR4ICsgMSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbm5lY3Rpb24udXNlciA9IHBhcnNlZC5hdXRoO1xuICAgIH1cbiAgfVxuICByZXR1cm4gY29ubmVjdGlvblxufVxuIl19